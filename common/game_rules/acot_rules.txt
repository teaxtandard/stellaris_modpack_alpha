#Tooltips will be generated from these rules when they fail. Use of custom_tooltip is recommended
#There are still multiple hard-coded rules that apply in addition to these.
#If rules here evaluate to true, there might still be other rules that make the action unavailable.
#If a rule here evaluates to false the action will become unavailable

#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target

# this = starbase
can_orbitable_repair_ships = {
	OR = {
		AND = {
			is_scope_type = starbase
			OR = {
				has_starbase_size >= starbase_starport
				has_starbase_size = juggernaut
				has_starbase_size >= ls_starbase_starport		
				has_starbase_size = origin_super_citadel_playable
				has_starbase_size = origin_super_citadel
				has_starbase_size >= acot_precusor_starbase
				has_starbase_size >= acot_precusor_sigma_starbase		
				has_starbase_size >= acot_precusor_phanon_starcitadel			
				has_starbase_size >= precursor_colossus		
				has_starbase_size >= acot_star_commander	
			}
			fleet = {
				is_disabled = no
			}
		}
		AND = {
			is_scope_type = megastructure
			OR = {
				is_megastructure_type = mega_shipyard_1
				is_megastructure_type = mega_shipyard_2
				is_megastructure_type = mega_shipyard_3
				is_megastructure_type = acot_precursor_colossus_base
				is_megastructure_type = acot_precursor_colossus_stage_two
				is_megastructure_type = acot_amerigo
				is_megastructure_type = acot_amerigo_ae
				is_megastructure_type = acot_amerigo_se
				is_megastructure_type = acot_amerigo_oe
				is_megdastructure_type = acot_phanon_master_reactor_sphere
			}
		}
	}
}


#Root = country, attacker
#This = country, target
#This rule is a condition for taking hostile actions towards neutral targets. Such as landing troops or attacking their fleets
can_take_hostile_actions = {
	if = {
		limit = {
			ROOT = {
				has_policy_flag = first_contact_attack_not_allowed
			}
			NOT = {
				is_hostile = ROOT
				has_communications = ROOT
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FIRST_CONTACT_PROTOCOL"
			always = no
		}
	}
	else_if = {
		limit = {
			AND = {
				NOT = { has_country_flag = hostile_to_nomads }
				ROOT = {
					is_country_type = nomad
				}
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FIRST_CONTACT_PROTOCOL"
			always = no
		}
	}
	else_if = {
		#attacking primitives with non-interference
		limit = {
			ROOT = {
				OR = {
					is_country_type = default
					is_country_type = ascended_empire
				}
				OR = {
					has_policy_flag = interference_passive
					has_policy_flag = interference_active
				}
			}
			is_primitive = yes
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_NATIVE_INTERFERENCE"
			always = no
		}
	}
	else_if = {
		limit = {
			is_primitive = yes
			ROOT = { 
				OR = {
					is_country_type = default
					is_country_type = ascended_empire
				} 
			}
			capital_scope = {
				root = {
					NOT = {
						any_planet_within_border = {
							is_same_value = prevprev
						}
					}
				}
			}
		}
		custom_tooltip = {
			text = ""
			always = no
		}
	}
	else_if = {
		limit = {
			ROOT = { is_subject_type = satrapy }
			is_country_type = faction
			root = {
				any_owned_planet = {
					exists = controller
					controller = {
						is_same_value = prevprevprev
					}
				}
			}
		}
		custom_tooltip = {
			text = ""
			always = yes
		}
	}
	else_if = {
		limit = {
			ROOT = { is_subject_type = satrapy }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_SATRAPY"
			always = no
		}
	}
	else_if = {
		limit = {
			ROOT = { is_subject_type = origin_protectorate }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_SATRAPY"
			always = no
		}
	}
	else_if = {
		limit = {
			ROOT = { is_subject_type = origin_banished_ascendancy }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_SATRAPY"
			always = no
		}
	}
	else_if = {
		limit = {
			THIS = {
				is_country_type = original_empire_passive
			}
		}
		custom_tooltip = {
			always = no
		}
	}
	else_if = {
		limit = {
			THIS = {
				is_country_type = void_lifeforms_1
			}
		}
		custom_tooltip = {
			always = yes
		}
	}
	else_if = {
		limit = {
			ROOT = {
				is_country_type = void_lifeforms_1
			}
		}
		custom_tooltip = {
			always = yes
		}
	}
	else_if = {
		limit = {
			THIS = {
				is_country_type = void_lifeforms_2
			}
		}
		custom_tooltip = {
			always = yes
		}
	}
	else_if = {
		limit = {
			ROOT = {
				is_country_type = void_lifeforms_2
			}
		}
		custom_tooltip = {
			always = yes
		}
	}
	else = {
		always = yes
	}
}

#Root = country, us
#This = country, them
#This rule is a condition for determining if a country is hostile towards another. not to be confused with can_take_hostile_action
can_be_hostile_towards = {
	if = {
		limit = { is_primitive = yes }
		ROOT = {
			NOT = { has_policy_flag = interference_passive }
		}
	}
	else_if = {
		limit = { ROOT = { is_primitive = yes } }
		NOT = { has_policy_flag = interference_passive }
	}
	else_if = {
		limit = { is_country_type = ratlings }
		always = yes
	}
	else_if = {
		limit = { is_country_type = void_lifeforms_1 }
		always = yes
	}
	else_if = {
		limit = { ROOT = { is_country_type = void_lifeforms_1 } }
		always = yes
	}
	else_if = {
		limit = { is_country_type = void_lifeforms_2 }
		always = yes
	}
	else_if = {
		limit = { ROOT = { is_country_type = void_lifeforms_2 } }
		always = yes
	}
}

#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target
can_orbital_bombard = {
	exists = FROM.OWNER
	NOT = {
		any_owned_ship = {
			is_ship_size = colossus
		}
	}
	OR = {
		AND = {
			ROOT.OWNER = {
				NOT = { has_communications = FROM.OWNER }
			}
			FROM.OWNER = {
				NOT = { is_country_type = primitive }
			} 
		}
		AND = {
			ROOT.OWNER = {
				NOR = {
					has_policy_flag = interference_passive
					has_policy_flag = interference_active
				}
			}
			FROM.OWNER = { is_country_type = primitive }
		}
		ROOT.OWNER = { is_at_war_with = FROM.CONTROLLER }
		FROM = { is_planet_class = pc_infested }
		FROM.CONTROLLER = { 
			OR = {
				is_country_type = swarm 
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = original_empire
				is_country_type = compound_empire
				is_country_type = void_lifeforms_1
				is_country_type = void_lifeforms_2
				is_country_type = katzenartig_imperium
			}
		}
		ROOT.OWNER = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = dormant_marauders
				is_country_type = marauder_raiders
				is_country_type = ruined_marauders
				is_country_type = gray_goo
				is_country_type = vol
				is_country_type = original_empire
				is_country_type = compound_empire
				is_country_type = katzenartig_imperium
				is_country_type = void_lifeforms_1
				is_country_type = void_lifeforms_2
				is_country_type = acot_crazed_stellarite
				AND = {
					is_country_type = awakened_marauders
					FROM.CONTROLLER = { 
						NAND = {
							is_subject_type = satrapy 
							NOT = { has_country_flag = rebelling_satrapy }							
						}
					}
				}
			}
		}
	}
}